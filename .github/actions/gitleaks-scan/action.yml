inputs:
  defectdojo-url:
    required: true
    description: 'DefectDojo URL'
  defectdojo-username:
    required: true
    description: 'DefectDojo Username'
  defectdojo-password:
    required: true
    description: 'DefectDojo Password'

runs:
  using: 'composite'
  steps:
    
    #Checkout current commit
    - name: Checkout
      uses: actions/checkout@v4
    
    #Scan current commit with gitleaks, generate JSON report and catch exit code    
    - name: Run gitleaks
      #джоба не падает при старте по событию тега (актуально для продовых воркфлоу в продуктовых репах) и при пуше в main в tf-репах
      continue-on-error: ${{ github.ref_type == 'tag' || (startsWith(github.repository, 'tf-') && github.ref == 'refs/heads/main') }}
      shell: bash
      id: gitleaks_scan
      run: |
        docker run --rm -v .:/path -w /path \
        ghcr.io/gitleaks/gitleaks:latest \
        git --log-opts "-1" \
        -f json \
        -r "gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json" \
        || SECRET_EXIT_CODE=$?

        if [ -z $SECRET_EXIT_CODE ]
          then
            echo "Secrets has not been found"
          exit 0
        elif [ $SECRET_EXIT_CODE = "1" ]
        then
          echo "########Secrets or error encountered########"
          exit 1
        else
          echo "Error has been occured"
        fi


    - name: Upload gitleaks report to artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}-json
        path: gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json
        #retention-days: 1

    - name: Download scan results artifact
      if: always()
      id: download-scan-results-artifact
      uses: actions/download-artifact@v4
      with:
        name: gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}-json
    
    - name: import scan results into defectdojo
      if: always()
      id: import-scan-results-into-defectdojo
      uses: portswigger-cloud/defectdojo-active-findings@v1
      with:
        defectdojo-url: ${{ inputs.defectdojo-url }}
        defectdojo-username: ${{ inputs.defectdojo-username }}
        defectdojo-password: ${{ inputs.defectdojo-password }}
        defectdojo-product-type: JJO
        defectdojo-product: ${{ github.event.repository.name }}
        defectdojo-environment-type: Production
        defectdojo-scan-type: Gitleaks JSON Report
        defectdojo-engagement-name: Secrets Scan
        scan-results-file-name: gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json