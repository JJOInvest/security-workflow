inputs:
  defectdojo-url:
    required: true
    description: 'DefectDojo URL'
  defectdojo-username:
    required: true
    description: 'DefectDojo Username'
  defectdojo-password:
    required: true
    description: 'DefectDojo pwd'
  defectdojo-token:
    required: true
    description: 'DefectDojo API Key'
  cf-access-client-id:
    required: true
    description: 'CF access client id'
  cf-access-client-secret:
    required: true
    description: 'CF access client secret'
  github-token:
    required: true
    description: 'GitHub token for ghcr login'

runs:
  using: 'composite'
  steps:
    
    #Checkout current commit
    - name: Checkout
      uses: actions/checkout@v4

    - name: debug
      shall: bash
      run: |
        docker login ghcr.io -u ${{ github.actor }} -p ${{ inputs.github-token }}
        echo "Testing auth..."
        docker pull ghcr.io/jjoinvest/dd-import-qg:v1.0
    
    #Scan current commit with gitleaks, generate JSON report and catch exit code    
  #  - name: Run gitleaks
  #    #джоба не падает при старте по событию тега (актуально для продовых воркфлоу в продуктовых репах) и при пуше в main в tf-репах
  #    continue-on-error: true
  #    shell: bash
  #    id: gitleaks_scan
  #    run: |        
  #      docker run --rm \
  #        -v $(pwd):/path \
  #        -w /path \
  #        --user $(id -u):$(id -g) \
  #        ghcr.io/gitleaks/gitleaks:latest \
  #        git --log-opts "-1" \
  #        -f json \
  #        -r "gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json" \
  #        || SECRET_EXIT_CODE=$?
#
  #      if [ -z $SECRET_EXIT_CODE ]
  #        then
  #          echo "Secrets has not been found"
  #        exit 0
  #      elif [ $SECRET_EXIT_CODE = "1" ]
  #      then
  #        echo "########Secrets or error encountered########"
  #        exit 1
  #      else
  #        echo "Error has been occured"
  #      fi
  #      
  #  - name: Login to GitHub Container Registry
  #    uses: docker/login-action@v3
  #    with:
  #      registry: ghcr.io
  #      username: ${{ github.actor }}
  #      password: ${{ inputs.github-token }}
#
  #  - name: Upload Gitleaks Report to DefectDojo
  #    shell: bash
  #    env:
  #      DD_URL: ${{ inputs.defectdojo-url }}
  #      DD_API_KEY: ${{ inputs.defectdojo-token }}
  #      DD_PRODUCT_TYPE_NAME: JJO
  #      DD_PRODUCT_NAME: ${{ github.event.repository.name }}
  #      DD_ENGAGEMENT_NAME: ${{ github.head_ref || github.ref_name }}
  #      DD_TEST_NAME: Gitleaks
  #      DD_TEST_TYPE_NAME: Gitleaks Scan
  #      DD_FILE_NAME: ./results/gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json
  #      DD_EXTRA_HEADER_1: CF-Access-Client-Id
  #      DD_EXTRA_HEADER_1_VALUE: ${{ inputs.cf-access-client-id }}
  #      DD_EXTRA_HEADER_2: CF-Access-Client-Secret
  #      DD_EXTRA_HEADER_2_VALUE: ${{ inputs.cf-access-client-secret }}
  #    run: |
  #      docker run --rm \
  #      -e DD_URL \
  #      -e DD_API_KEY \
  #      -e DD_PRODUCT_TYPE_NAME \
  #      -e DD_PRODUCT_NAME \
  #      -e DD_ENGAGEMENT_NAME \
  #      -e DD_TEST_NAME \
  #      -e DD_TEST_TYPE_NAME \
  #      -e DD_FILE_NAME \
  #      -e DD_EXTRA_HEADER_1 \
  #      -e DD_EXTRA_HEADER_1_VALUE \
  #      -e DD_EXTRA_HEADER_2 \
  #      -e DD_EXTRA_HEADER_2_VALUE \
  #      -v $(pwd):/usr/local/dd-import/results \
  #      ghcr.io/jjoinvest/dd-import-qg:v1.0 dd-reimport-findings.sh
#
  #  - name: Check Quality Gates
  #    shell: bash
  #    env:
  #      DD_URL: ${{ inputs.defectdojo-url }}
  #      DD_API_KEY: ${{ inputs.defectdojo-token }}
  #      DD_PRODUCT_TYPE_NAME: JJO
  #      DD_PRODUCT_NAME: ${{ github.event.repository.name }}
  #      DD_ENGAGEMENT_NAME: ${{ github.head_ref || github.ref_name }}
  #      DD_TEST_NAME: Gitleaks
  #      DD_TEST_TYPE_NAME: Gitleaks Scan
  #    #  DD_FILE_NAME: ./results/gitleaks-${{ github.event.repository.name }}-${{ github.head_ref || github.ref_name }}.json
  #      DD_EXTRA_HEADER_1: CF-Access-Client-Id
  #      DD_EXTRA_HEADER_1_VALUE: ${{ inputs.cf-access-client-id }}
  #      DD_EXTRA_HEADER_2: CF-Access-Client-Secret
  #      DD_EXTRA_HEADER_2_VALUE: ${{ inputs.cf-access-client-secret }}
  #    run: |
  #      docker run --rm \
  #      -e DD_URL \
  #      -e DD_API_KEY \
  #      -e DD_PRODUCT_TYPE_NAME \
  #      -e DD_PRODUCT_NAME \
  #      -e DD_ENGAGEMENT_NAME \
  #      -e DD_TEST_NAME \
  #      -e DD_TEST_TYPE_NAME \
  #      -e DD_EXTRA_HEADER_1 \
  #      -e DD_EXTRA_HEADER_1_VALUE \
  #      -e DD_EXTRA_HEADER_2 \
  #      -e DD_EXTRA_HEADER_2_VALUE \
  #      -v $(pwd):/usr/local/dd-import/results \
  #      ghcr.io/jjoinvest/dd-import-qg:v1.0 dd-check-thresholds.sh
        