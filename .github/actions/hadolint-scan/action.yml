runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Run Hadolint (JSON report)
      shell: bash
      run: |
        echo "Finding Dockerfiles..."
        mapfile -t files < <(find $GITHUB_WORKSPACE -type f \( -iname "dockerfile*" -o -iname "*dockerfile*" \) -not -path "*/.git/*" | sort)
        if [ ${#files[@]} -eq 0 ]; then
          echo "No Dockerfiles found. Exiting."
          exit 0
        fi

        for file in "${files[@]}"; do
          trimmed_path="${file#/home/runner/work/}"
          
          echo "Scanning: $file"
          
          flat_name=$(echo "$trimmed_path" | tr '/' '-' | sed 's/^-//')
          report_name="${flat_name}-hadolint.json"

          docker run --rm -i --entrypoint /bin/hadolint \
            hadolint/hadolint --no-fail -f json - < "$file" | \
            jq --arg file "$trimmed_path" '.[].file = $file' > "$report_name"          

          echo "Saved report to $report_name"
        done
    - name: Upload Hadolint (JSON report)
      uses: actions/upload-artifact@v4
      with:
        name: hadolint-reports
        path: '*-hadolint.json'
    - name: Run Hadolint (Text report)
      shell: bash
      run: |
        echo "Finding Dockerfiles..."
        mapfile -t files < <(find $GITHUB_WORKSPACE -type f \( -iname "dockerfile*" -o -iname "*dockerfile*" \) -not -path "*/.git/*" | sort)
        if [ ${#files[@]} -eq 0 ]; then
          echo "No Dockerfiles found. Exiting."
          exit 0
        fi

        for file in "${files[@]}"; do
          trimmed_path="${file#/home/runner/work/}"
          
          echo "Scanning: $file"
          
          flat_name=$(echo "$trimmed_path" | tr '/' '-' | sed 's/^-//')
          report_name="${flat_name}-hadolint.txt"

          docker run --rm -i --entrypoint /bin/hadolint \
            hadolint/hadolint --no-fail -f tty - < "$file" | \
            jq --arg file "$trimmed_path" '.[].file = $file' > "$report_name"          

          echo "Saved report to $report_name"
          cat $report_name
        done
    - name: Upload Hadolint (Text report)
      uses: actions/upload-artifact@v4
      with:
        name: hadolint-reports
        path: '*-hadolint.txt'